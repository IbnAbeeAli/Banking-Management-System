package databaseproject;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.sql.*;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author waniya_mustafa
 */
public class cashWithdrawl extends javax.swing.JFrame {

    int userLoginID;
    int customerID;
    int accountID;

    /**
     * Creates new form cashWithdrawl
     */
    public cashWithdrawl(int userLoginID, int customerID, int accountID) {
        initComponents();
        ImageIcon background_img = new ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\DatabaseProject\\src\\databaseproject\\Cash Withdrawl.jpg", "");
        Image img = background_img.getImage();
        Image temp_img = img.getScaledInstance(878, 537, Image.SCALE_SMOOTH);
        background_img = new ImageIcon(temp_img);
        JLabel backgrnd = new JLabel("", background_img, JLabel.CENTER);
        backgrnd.setBounds(0, 0, 878, 537);
        this.add(backgrnd);
        confirmWithdrawBtn.setOpaque(true);
        this.userLoginID = userLoginID;
        this.customerID = customerID;
        this.accountID = accountID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        withdrawAmount = new javax.swing.JTextField();
        confirmWithdrawBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cash Withdrawl");

        jLabel1.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel1.setText("Enter the Amount to Withdraw");

        withdrawAmount.setBackground(new java.awt.Color(204, 204, 204));
        withdrawAmount.setFont(new java.awt.Font("Arima Madurai", 0, 18)); // NOI18N
        withdrawAmount.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        withdrawAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawAmountActionPerformed(evt);
            }
        });

        confirmWithdrawBtn.setBackground(new java.awt.Color(0, 153, 153));
        confirmWithdrawBtn.setFont(new java.awt.Font("Arima Madurai", 1, 18)); // NOI18N
        confirmWithdrawBtn.setForeground(new java.awt.Color(255, 255, 255));
        confirmWithdrawBtn.setText("Confirm");
        confirmWithdrawBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(239, 121, 138), 3, true));
        confirmWithdrawBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmWithdrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmWithdrawBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(407, Short.MAX_VALUE)
                .addComponent(confirmWithdrawBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(314, 314, 314)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(withdrawAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(214, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(confirmWithdrawBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(withdrawAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(390, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void withdrawAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawAmountActionPerformed
        // TODO add your handling code here:
        System.out.println("Withdrawl performed of Rs: " + this.withdrawAmount.getText());
    }//GEN-LAST:event_withdrawAmountActionPerformed

    private void confirmWithdrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmWithdrawBtnActionPerformed
        // TODO add your handling code here:
        if (withdrawAmount.getText().equals("")){
            dispose();
            JOptionPane.showMessageDialog(null, "Empty Field! Try again");
            MainMenuFrame m1 = new MainMenuFrame(this.userLoginID);
            m1.setVisible(true);
        }
            
        validatingWithdrawl();
    }//GEN-LAST:event_confirmWithdrawBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmWithdrawBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField withdrawAmount;
    // End of variables declaration//GEN-END:variables

    void validatingWithdrawl() {

        try {
            System.out.println("Executing CashWithdrawl");
            //selecting account from userloginid
            String user = "root";
            String password = "seecs@123";

            //Getting connection to the database
            Connection myCon = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", user, password);
            // Creating a statement
            Statement myStmt = myCon.createStatement();
            ResultSet myrs;
            
            int currBalance = 0;
            int withAmount = Integer.parseInt(this.withdrawAmount.getText());
            System.out.println("withdraw amount: "+withAmount);
            
            myrs = myStmt.executeQuery("select currentbalance from account where accountid = " + this.accountID + ";");
            
            if (myrs.next()) {
                currBalance = myrs.getInt("currentbalance");
                System.out.println("currentBalance: "+currBalance);
            }
            

            if (currBalance < withAmount) {
                JOptionPane.showMessageDialog(null, "Not enough Balance");
                throw new Exception();
            }
            
            int newBalance = currBalance - withAmount;
            System.out.println("newbalance: " + newBalance);
            System.out.println("accountID: " + this.accountID );

            //updating the query in the database account
            String query = "update account set currentbalance = " + newBalance + " where accountid = " + this.accountID;
            myStmt.executeUpdate(query);
            System.out.println("updating transaction");
            //inserting in the transactionlog
            query = "INSERT INTO `project`.`transactionlog`"
                    + "(`TransactionDate`,`TransactionTypeID`,`TransactionAmount`,`AccountID`,`toaccountid`,`CustomerID`,`UserLoginID`)\n"
                    + "VALUES"
                    + "(CURRENT_TIMESTAMP()," + 0 + "," + withAmount + "," + this.accountID + "," + this.accountID + "," + this.customerID + "," + this.userLoginID + ");";
            myStmt.executeUpdate(query);
            System.out.println("Inserted into transaction log");
            dispose();
            JOptionPane.showMessageDialog(null, "Amount Successfully withdrawled!\nCurrent Balance: " + newBalance);
            MainMenuFrame mm1 = new MainMenuFrame(this.userLoginID);
            mm1.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            dispose();
            MainMenuFrame mm1 = new MainMenuFrame(this.userLoginID);
            mm1.setVisible(true);

        }

    }

}
