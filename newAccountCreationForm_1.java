package databaseproject;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.sql.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author waniya_mustafa
 */
public class newAccountCreationForm_1 extends javax.swing.JFrame {

    int userLoginID;
    int accountID;
    int customerID;

    /**
     * Creates new form newAccountCreationForm
     */
    public newAccountCreationForm_1(int loginid, int customerid, int accountid) {
        initComponents();
        ImageIcon background_img = new ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\DatabaseProject\\src\\databaseproject\\newaccountCreation.jpeg", "");
        Image img = background_img.getImage();
        Image temp_img = img.getScaledInstance(1100, 700, Image.SCALE_SMOOTH);
        background_img = new ImageIcon(temp_img);
        JLabel backgrnd = new JLabel("", background_img, JLabel.CENTER);
        backgrnd.setBounds(0, 0, 1100, 700);
        this.add(backgrnd);
        createacct.setOpaque(true);
        this.userLoginID = loginid;
        this.accountID = accountid;
        this.customerID = customerid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        newPassword = new javax.swing.JPasswordField();
        newLogin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userid = new javax.swing.JTextField();
        CNIC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        userDeposit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        createacct = new javax.swing.JButton();
        SavingsAccountRB = new javax.swing.JRadioButton();
        currentAccountRB = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newPassword.setBackground(new java.awt.Color(204, 204, 204));
        newPassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        newPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        newPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPasswordActionPerformed(evt);
            }
        });

        newLogin.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        newLogin.setText("User Name");

        jLabel2.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel2.setText("Password");

        userid.setBackground(new java.awt.Color(204, 204, 204));
        userid.setFont(new java.awt.Font("Arima Madurai", 0, 18)); // NOI18N
        userid.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useridActionPerformed(evt);
            }
        });

        CNIC.setBackground(new java.awt.Color(204, 204, 204));
        CNIC.setFont(new java.awt.Font("Arima Madurai", 0, 18)); // NOI18N
        CNIC.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        CNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CNICActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel4.setText("CNIC");

        jLabel6.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel6.setText("Account Type");

        userDeposit.setBackground(new java.awt.Color(204, 204, 204));
        userDeposit.setFont(new java.awt.Font("Arima Madurai", 0, 18)); // NOI18N
        userDeposit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        userDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDepositActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel7.setText("Initial Deposit");

        createacct.setBackground(new java.awt.Color(129, 228, 218));
        createacct.setFont(new java.awt.Font("Arima Madurai", 1, 18)); // NOI18N
        createacct.setText("Create Account");
        createacct.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(239, 121, 138), 4, true));
        createacct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createacct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createacctActionPerformed(evt);
            }
        });

        buttonGroup1.add(SavingsAccountRB);
        SavingsAccountRB.setText("Savings");

        buttonGroup1.add(currentAccountRB);
        currentAccountRB.setText("Current");
        currentAccountRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentAccountRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(715, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(userid)
                                .addComponent(newLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(newPassword)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CNIC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(currentAccountRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SavingsAccountRB)))
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createacct, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(newLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentAccountRB)
                    .addComponent(SavingsAccountRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(5, 5, 5)
                .addComponent(userDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(createacct, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPasswordActionPerformed

    private void useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useridActionPerformed

    private void CNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CNICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CNICActionPerformed

    private void userDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDepositActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userDepositActionPerformed

    private void createacctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createacctActionPerformed
        // TODO add your handling code here:
        try {
            check();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_createacctActionPerformed

    private void currentAccountRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentAccountRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentAccountRBActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CNIC;
    private javax.swing.JRadioButton SavingsAccountRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton createacct;
    private javax.swing.JRadioButton currentAccountRB;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel newLogin;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JTextField userDeposit;
    private javax.swing.JTextField userid;
    // End of variables declaration//GEN-END:variables

    void check() {

        int accounttype = -1;
        if (SavingsAccountRB.isSelected()) {
            accounttype = 0;
        } else {
            accounttype = 1;
        }

        try {
            if (this.userid.getText().equals("")
                    || this.CNIC.getText().equals("")
                    || this.userDeposit.getText().equals("")
                    || this.newPassword.getText().equals("")
                    || accounttype == -1) {
                dispose();
                JOptionPane.showMessageDialog(null, "Some Fields are empty. Please fill all the fields and try again");
                throw new Exception();
            }
            String userName = userid.getText();
            String cnic = CNIC.getText();
            int deposit = Integer.parseInt(userDeposit.getText());
            String password = newPassword.getText();

            Connection myCon = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "seecs@123");
            // Creating a statement
            Statement myStmt = myCon.createStatement();
            //Result Statement
            ResultSet myRs;
            String checkQuery = "select userlogin from userlogins where userlogin = '" + userName + "';";
            myRs = myStmt.executeQuery(checkQuery);
            if (myRs.next()) {
                System.out.println("Invalid Username");
                JOptionPane.showMessageDialog(null, "Invalid Username");
                throw new Exception();
                //show dialogue box; 
                //go back to main menu
            }

            checkQuery = "select customerid from customer where ssn = '" + cnic + "';";
            myRs = myStmt.executeQuery(checkQuery);
            if (myRs.next()) {
                int cid = myRs.getInt("customerid");
                if (cid == this.customerID) {
                    ;
                } else {
                    System.out.println("CNIC doesn't match with your CNIC");
                    JOptionPane.showMessageDialog(null, "CNIC doesn't match with your CNIC");
                    throw new Exception();
                }
            } else {
                System.out.println("Invalid CNIC");
                JOptionPane.showMessageDialog(null, "Invalid CNIC");
                throw new Exception();
            }

            checkQuery = "select accountid from account where customerid='" + this.customerID + "'and accounttypeid ='" + accounttype + "';";
            myRs = myStmt.executeQuery(checkQuery);
            if (myRs.next()) {
                System.out.println("Invalid CNIC");
                JOptionPane.showMessageDialog(null, "You cannot create two accounts of same type");
                throw new Exception();
            }

            String query = "INSERT INTO `project`.`account`"
                    + "(`CustomerID`,`AccountTypeID`,`AccountStatusTypeID`,`InterestSavingsRateID`,`CurrentBalance`,`dateCreated`)\n"
                    + "VALUES"
                    + "(" + this.customerID + "," + accounttype + "," + 0 + "," + 0 + "," + deposit + "," + "CURRENT_TIMESTAMP())";

            myStmt.executeUpdate(query);
            System.out.println("update query");

            myRs = myStmt.executeQuery("select accountid from account where customerid = '" + this.customerID + "'and accounttypeid='" + accounttype + "';");
            int accID = -1;
            while (myRs.next()) {
                accID = myRs.getInt("accountid");
                System.out.println(accID);
            }

            query = "INSERT INTO userlogins"
                    + "(`UserLogin`,`UserPassword`,`AccountID`)"
                    + "VALUES('" + userName + "','" + password + "'," + accID + " );";
            myStmt.executeUpdate(query);

            int userID = -1;
            myRs = myStmt.executeQuery("select userloginId from userlogins where userlogin = '" + userName + "';");
            if (myRs.next()) {
                userID = myRs.getInt("userloginID");
            }

            myStmt.executeUpdate("INSERT INTO `project`.`transactionlog`"
                    + "(`TransactionDate`,`TransactionTypeID`,`TransactionAmount`,`AccountID`,`toaccountid`,`CustomerID`,`UserLoginID`)"
                    + "VALUES"
                    + "(CURRENT_TIMESTAMP()," + 1 + "," + deposit + "," + accID + "," + accID + "," + this.customerID + "," + userID + ");");

            dispose();
            JOptionPane.showMessageDialog(null, "Account Created Successfully!");
            mainFrame m1 = new mainFrame();
            m1.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            dispose();
            MainMenuFrame mm1 = new MainMenuFrame(this.userLoginID);
            mm1.setVisible(true);
        }

    }

}
