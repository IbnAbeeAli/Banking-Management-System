package databaseproject;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.util.*;
import java.sql.*;
import javax.swing.JOptionPane;

public class userLoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form userLoginFrame
     */
    public userLoginFrame() {
        initComponents();
        ImageIcon background_img = new ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\DatabaseProject\\src\\databaseproject\\login image.jpeg", "");
        Image img = background_img.getImage();
        Image temp_img = img.getScaledInstance(1199, 722, Image.SCALE_SMOOTH);
        background_img = new ImageIcon(temp_img);
        JLabel backgrnd = new JLabel("", background_img, JLabel.CENTER);
        backgrnd.setBounds(0, 0, 1199, 722);
        this.add(backgrnd);
        loginBtn.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Login");
        setPreferredSize(new java.awt.Dimension(1199, 722));

        jLabel1.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("User Name");

        jLabel2.setFont(new java.awt.Font("Arima Madurai", 1, 22)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Password");

        userNameField.setBackground(new java.awt.Color(204, 204, 204));
        userNameField.setFont(new java.awt.Font("Arima Madurai", 0, 18)); // NOI18N
        userNameField.setForeground(new java.awt.Color(0, 0, 0));
        userNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });

        passwordField.setBackground(new java.awt.Color(204, 204, 204));
        passwordField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        passwordField.setForeground(new java.awt.Color(0, 0, 0));
        passwordField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        loginBtn.setBackground(new java.awt.Color(0, 153, 153));
        loginBtn.setFont(new java.awt.Font("Arima Madurai", 1, 18)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Login");
        loginBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(239, 121, 138), 3, true));
        loginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(776, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(userNameField)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(179, 179, 179))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(226, 226, 226))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(248, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(214, 214, 214))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed

        try {
            checkLogin();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userNameField;
    // End of variables declaration//GEN-END:variables

    //Method for checking the username and password from the database
    void checkLogin() {

        try {
            String user = "root";
            String password = "seecs@123";

            //Getting connection to the database
            Connection myCon = DriverManager.getConnection("jdbc:mysql://localhost:3306/project", user, password);
            // Creating a statement
            Statement myStmt = myCon.createStatement();
            ResultSet myrs;

            String uName = this.userNameField.getText();
            String pass = this.passwordField.getText();

            //Execution of sql query
            String query = "select userloginID from userlogins where userlogin = '" + uName + "';";
            myrs = myStmt.executeQuery(query);
            int userloginID = -1;
            //Checking whether user with entered userlogin exists
            if (myrs.next()) {
                userloginID = myrs.getInt("userloginid");
            } else {
                 JOptionPane.showMessageDialog(null, "Invalid Credentials");
                throw new Exception();
            }

            query = "select userpassword from userlogins where userlogin='" + uName + "'  and userpassword ='" + pass + "';";
            myrs = myStmt.executeQuery(query);
            //if the userpassword is not correct, throw invalid credentials exception
            if (!myrs.next()) {
                 JOptionPane.showMessageDialog(null, "Invalid Credentials");
                throw new Exception();
            } 
            
            //retrieving account id and checking though that whether that account is active or inactive
            int accountID = -1;
            myrs = myStmt.executeQuery("select accountid from userlogins where userloginid = " + userloginID + ";");
            if(myrs.next())
                accountID = myrs.getInt("accountid");
            myrs = myStmt.executeQuery("select accountstatustypeid from account where accountid = " + accountID + ";");
            int accountStatus= -1;
            if (myrs.next())
                accountStatus = myrs.getInt("accountstatustypeid");
            
            if(accountStatus == 1){
                JOptionPane.showMessageDialog(null, "Account Status Inactive!\nCannot Login");
                throw new Exception();
            }
            
            //all checks performed now showing mainmenuframe
            dispose();
            MainMenuFrame mm1 = new MainMenuFrame(userloginID);
            mm1.setVisible(true);
            
        }
    
    catch (Exception exception) {
            exception.printStackTrace();
            dispose();
            mainFrame m1 = new mainFrame();
            m1.setVisible(true);
    }
    //query execution will happen and we will check whether the crediantials are correct
    //if correct, then we will change the screen depending upon the value of the comparison
}

}
